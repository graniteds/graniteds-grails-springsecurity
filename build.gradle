// Gdsflex Spring Security

description = 'Gdsflex Spring Security support'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'signing'

group = 'org.graniteds.grails'
version = granitedsGrailsVersion
description = 'Gdsflex Spring Security'

repositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	deployerJars
}

dependencies {
	compile 'org.jboss.spec.javax.servlet:jboss-servlet-api_3.0_spec:1.0.2.Final'
	compile 'org.graniteds:granite-server-core:3.1.1.GA'
	compile 'org.graniteds:granite-server-spring:3.1.1.GA'
	compile 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
}

compileJava {
	sourceCompatibility=1.6
	targetCompatibility=1.6
}

jar {
	baseName = 'granite-grails-springsecurity'
}

javadoc {
	title "${project.description} API Documentation"
	
	configure(options) {
		version = true
		author = true
		use = true
		windowTitle = "${project.description} API Documentation"
		docTitle = "${project.description} API Documentation"
	}
}

task sourcesJar(type: Jar, dependsOn: 'classes') {
	baseName = 'granite-grails-springsecurity'
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
	baseName = 'granite-grails-springsecurity'
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.12'
}

signing {
	required {
		gradle.taskGraph.hasTask('uploadArchives')
	}
	sign configurations.archives
}

install {
	repositories {
		mavenInstaller {
			// Generated dependencies are not suitable for maven pom, remove everything for now
			pom.whenConfigured { pom -> pom.dependencies.clear() }
		}
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment {
				MavenDeployment deployment -> signing.signPom(deployment)
			}
			
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeOssUserName, password: sonatypeOssPassword)
			}
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeOssUserName, password: sonatypeOssPassword)
			}
			
			pom.project {
				name 'Gdsflex Spring Security'
				description project.description
				url 'http://www.graniteds.org'
				
				scm {
					url 'scm:git@github.com:graniteds/graniteds-grails-springsecurity.git'
					connection 'scm:git@github.com:graniteds/graniteds-grails-springsecurity.git'
					developerConnection 'scm:git@github.com:graniteds/graniteds-grails-springsecurity.git'
				}
				
				licenses {
					license {
						name 'Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0'
						distribution 'repo'
					}
				}
				
				developers {
					developer {
						id 'wdrai'
						name 'William Drai'
					}
				}
			}
			
			// Generated dependencies are not suitable for maven pom, remove everything for now
			pom.whenConfigured { pom -> pom.dependencies.clear() }
		}
	}
}
